<head>
    <link rel="stylesheet" href="/css/taskCss/boardPage.css" />
</head>

<body>
    <div class="contant">
        <%- include('../task/task_component/task-navbar.ejs') %>

        <div class="topBoard">
            <div class="addleft">
                <i class="fa-solid fa-magnifying-glass"></i>
                <input type="text" id="filterTaskInput" placeholder="ค้นหางาน..." onkeyup="filterTasks()">
            </div>
            <a href="#" class="link" id="new-task-btn">
                <i class='bx bx-task'></i> + เพิ่มงานใหม่
            </a>
        </div>

        <div class="boardWrap">
            <div class="board">
                <% const statusCategories = ['toDo', 'inProgress', 'fix', 'finished']; %>
                <% const statusTranslations = {
                    toDo: 'งานที่ต้องทำ',
                    inProgress: 'กำลังดำเนินการ',
                    fix: 'แก้ไข',
                    finished: 'เสร็จสิ้น'
                }; %>
                <% statusCategories.forEach(statusCategory => { %>
                    <div class="column" data-status="<%= statusCategory %>">
                        <div class="status" id="statusHeader" style="
                            <% if (statusCategory === 'toDo') { %>
                                color: #fff; background-color: #44546f;
                            <% } else if (statusCategory === 'inProgress') { %>
                                color: #fff; background-color: #0880ea;
                            <% } else if (statusCategory === 'fix') { %>
                                color: #fff; background-color: #F93827;
                            <% } else if (statusCategory === 'finished') { %>
                                color: #fff; background-color: #299764;
                            <% } %> ">
                            <p><%= statusTranslations[statusCategory] %>
                                <span class="span count" data-status-count="<%= statusCategory %>">
                                    <%= tasksByStatus[statusCategory]?.length || 0 %>
                                </span>
                            </p>
                        </div>
    
                        <div class="itemStatus">
                            <ul id="tasks-<%= statusCategory %>">
                                <% (tasksByStatus[statusCategory] || []).forEach(task => { %>
                                    <li class="task task-item" data-id="<%= task._id %>" data-space-id="<%= spaces._id %>" draggable="true" style="text-decoration: none; color: inherit;">
                                            <div class="firstSec">
                                                <div class="taskname"><%= task.taskName %></div>

                                                <div class="priority">
                                                    <% if (task.taskPriority === 'urgent') { %>
                                                        <div class="PrioIcon" data-label="ด่วน" style="background-color: #ff3b301a;">
                                                            <i class="fa-solid fa-angles-up" style="color: #ff3b30;"></i>
                                                        </div>
                                                    <% } else if (task.taskPriority === 'normal') { %>
                                                        <div class="PrioIcon" data-label="ปกติ" style="background-color: #ffcc001a;">
                                                            <i class="fa-solid fa-grip-lines" style="color: #ffcc00;"></i>
                                                        </div>
                                                    <% } else if (task.taskPriority === 'low') { %>
                                                        <div class="PrioIcon" data-label="ต่ำ" style="background-color: #2562f61a;">
                                                            <i class="fa-solid fa-angle-down" style="color: #2562f6;"></i>
                                                        </div>
                                                    <% } %>
                                                </div>
                                            </div>


                                            <div class="assigned-users">
                                                <% if (task.assigneeProgress && task.assigneeProgress.length > 0) { %>
                                                    <h1 class="progressText"> 
                                                        <i class="fa-solid fa-spinner"></i>
                                                        ความคืบหน้าของงาน
                                                    </h1>
                                                <% } %>
                                                <% (task.assigneeProgress || []).forEach(progress => { %>
                                                    <div class="assignee-progress">
                                                        <img src="<%= progress.assignee?.profileImage || '/public/img/profileImage/userDefalt.jpg' %>"
                                                            alt="<%= progress.assignee?.username || 'Unknown' %>"
                                                            style="width: 30px; height: 30px; border-radius: 50%;"
                                                            onerror="this.onerror=null; this.src='/public/img/profileImage/userDefalt.jpg';">
                                                        <div class="progress-container">
                                                            <div class="progress-bar"
                                                                style="width: <%= progress.percentage %>%;"></div>
                                                        </div>
                                                        <span class="progress-text">
                                                            <%= progress.percentage %>% (<%= progress.completed %> / <%= progress.total %>)
                                                        </span>
                                                    </div>
                                                <% }) %>
                                            </div>
                                        </a>
                                        <div class="thSection">
                                            <div class="thCon">
                                                <% if (!(task.assigneeProgress && task.assigneeProgress.length > 0)) { %>
                                                    <div class="assignedPro">
                                                        <% task.assignedUsers.forEach(user => { %>
                                                            <div class="userProfile">
                                                                <img src="<%= user.profileImage || '/public/img/profileImage/userDefalt.jpg' %>"
                                                                    alt="<%= user.username || 'Unknown' %>" style="width: 30px; height: 30px; border-radius: 50%;">
                                                            </div>
                                                        <% }) %>
                                                    </div>
                                                <% } %>
                                            </div>
                                            <div class="rightOpt">
                                                <div class="task-due-date">
                                                    <span style="<%= task.dueDate ? 'display: none;' : '' %>">
                                                    </span>
                                                    <% if (task.dueDate) { %>
                                                    <span id="dueDateItem">
                                                        <i class="fa-regular fa-calendar"></i>
                                                        <%= moment(task.dueDate).format("D MMM") %>
                                                    </span>
                                                    <% } %>
                                                </div>
                                                <div class="delSec">
                                                    <i class="fa-solid fa-trash-can deleteTask" id="deleteTask"
                                                    onclick="confirmDeleteTask('<%= task._id %>', '<%= spaces._id %>')"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </li>
                                <% }) %>
                            </ul>
                        </div>
        
                        <!-- Add Task Form under the status -->
                        <div class="addUnder">
                            <div class="triggerAdd" onclick="showInputForm(this)">
                                + เพิ่มงานใหม่
                            </div>
                            <form action="/addTask_board" method="POST" class="add-task-form" style="display: none; width: 100%;" onsubmit="return submitForm(event)">
                                <input type="hidden" name="project" value="<%= spaces._id %>">
                                <input type="hidden" name="columnStatus" value="<%= statusCategory %>"> 
                                <input type="text" name="taskName" placeholder="ใส่ชื่องาน" required id="underInput">
                                <button type="submit" style="display: none;">เพิ่มงาน</button>
                            </form>
                        </div>
                    </div>
                <% }) %>
            </div>
        </div>
    </div>

    <script>
        function filterTasks() {
            const input = document.getElementById("filterTaskInput").value.toLowerCase();
            const taskItems = document.querySelectorAll(".task-item");
        
            taskItems.forEach((taskItem) => {
                const taskName = taskItem.querySelector(".taskname").innerText.toLowerCase();
        
                if (taskName.includes(input)) {
                    taskItem.style.display = ""; // Show the task
                } else {
                    taskItem.style.display = "none"; // Hide the task
                }
            });
        
            // Update counts for each status column
            const statusCategories = ['toDo', 'inProgress', 'fix', 'finished'];
            statusCategories.forEach((status) => {
                const columnTasks = document.querySelectorAll(`#tasks-${status} .task-item:not([style*="display: none"])`);
                const countElement = document.querySelector(`[data-status-count="${status}"]`);
                if (countElement) {
                    countElement.innerText = columnTasks.length;
                }
            });
        }

        
        function showInputForm(triggerElement) {
            const form = triggerElement.nextElementSibling; // The form is the next sibling
            const triggerAdd = triggerElement; // The clicked triggerAdd
        
            // Show the form and hide triggerAdd
            form.style.display = "block";
            triggerAdd.style.display = "none";
        
            // Automatically focus on the input field
            const inputField = form.querySelector("#underInput");
            if (inputField) {
                inputField.focus();
            }
        
            // Add a listener to detect clicks outside the form
            document.addEventListener("click", handleClickOutsideForm);
        
            function handleClickOutsideForm(event) {
                if (!form.contains(event.target) && event.target !== triggerAdd) {
                    // Hide the form and show triggerAdd if clicking outside
                    form.style.display = "none";
                    triggerAdd.style.display = "block";
        
                    // Remove the click listener
                    document.removeEventListener("click", handleClickOutsideForm);
                }
            }
        }
        
    
        // Submit the form when the Enter key is pressed
        function submitForm(event) {
            if (event.key === "Enter") {
                event.preventDefault(); 
                event.target.submit();  
            }
        }
        
        // Prevent Enter key submission while in the input field
        const inputField = document.querySelector('input[name="taskName"]');
        inputField.addEventListener('keydown', function (event) {
            if (event.key === "Enter") {
                event.preventDefault();
                inputField.form.submit(); // Submit the form when Enter is pressed
            }
        });
        
        function toggleTagDropdown(taskId) {
            const dropdown = document.getElementById(`tag-dropdown-${taskId}`);
            if (dropdown.style.display === 'none' || dropdown.style.display === '') {
                dropdown.style.display = 'block';
            } else {
                dropdown.style.display = 'none';
            }
        }
        
        function getRandomPastelColor() {
            const hue = Math.floor(Math.random() * 360);
            const pastel = `hsl(${hue}, 100%, 85%)`;
            return pastel;
        }
        
        document.addEventListener('DOMContentLoaded', function () {
            const tags = document.querySelectorAll('.tag');
            tags.forEach(tag => {
                tag.style.backgroundColor = getRandomPastelColor();
            });
        
            const categoryToggle = document.querySelector('#categoryToggle');
            const categoryDropdown = document.querySelector('#categoryDropdown');
            const currentCategory = document.querySelector('#currentCategory');
            const categoryInput = document.querySelector('#category');
        
            categoryToggle.addEventListener('click', function () {
                categoryDropdown.style.display = categoryDropdown.style.display === 'none' ? 'block' : 'none';
            });
        
            categoryDropdown.addEventListener('click', function (event) {
                const selectedOption = event.target.closest('.category-option');
                if (selectedOption) {
                    const selectedCategory = selectedOption.getAttribute('data-category');
                    currentCategory.textContent = selectedOption.textContent;
                    categoryInput.value = selectedCategory;
                    categoryDropdown.style.display = 'none';
                }
            });
        });
    </script>

    <%- include('../task/task_component/board_addPopup.ejs') %>
    <script src="/script/taskScript/task-board.js"></script>
</body>